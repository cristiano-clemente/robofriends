{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","globalStyle.js","App.js","index.js"],"names":["Container","styled","div","Card","id","name","email","src","alt","toLowerCase","CardList","robots","map","user","i","SearchByName","input","SearchBox","searchField","searchChange","type","placeholder","onChange","GlobalStyle","createGlobalStyle","Header","Heading","h1","CardContainer","App","useState","setRobots","setSearchField","useEffect","fetch","then","response","json","users","filteredRobots","filter","robot","includes","event","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ooBAGA,IAAMA,EAAYC,IAAOC,IAAV,KA+BAC,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,eAACN,EAAD,WACE,qBAAKO,IAAG,+BAA0BH,EAA1B,iBAA6CI,IAAI,KACzD,gCACE,6BAAKH,IACL,4BAAIC,EAAMG,uBCNHC,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,mCAEIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAEEV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,S,21BCPnB,IAAMC,EAAed,IAAOe,MAAV,KA2CHC,EAVG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,cAACJ,EAAD,CACEK,KAAK,SACLC,YAAY,iBACZC,SAAUH,K,k1BCvChB,IA8BeI,EA9BKC,YAAH,K,klBCKjB,IAAMC,EAASxB,IAAOC,IAAV,KAONwB,EAAUzB,IAAO0B,GAAV,KAUPC,EAAgB3B,IAAOC,IAAV,KAuCJ2B,EAjCH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACTnB,EADS,KACDoB,EADC,OAEsBD,mBAAS,IAF/B,mBAETZ,EAFS,KAEIc,EAFJ,KAIhBC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAWP,EAAUO,SAG/B,IAKMC,EAAiB5B,EAAO6B,QAAO,SAAAC,GACnC,OAAOA,EAAMpC,KAAKI,cAAciC,SAASxB,EAAYT,kBAGvD,OACE,qCACE,cAAC,EAAD,IACA,eAACgB,EAAD,WACE,cAACC,EAAD,0BACA,cAAC,EAAD,CAAWP,aAdM,SAACwB,GACtBX,EAAeW,EAAMC,OAAOC,aAe1B,cAACjB,EAAD,UACE,cAAC,EAAD,CAAUjB,OAAQ4B,UCrD1BO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7dd6d356.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  color: var(--text-medium-emphasis);\r\n  background-color: var(--surface-color);\r\n  transition: transform .5s;\r\n  border-radius: 0.5rem;\r\n  padding: 0.5rem;\r\n  margin: 0.5rem;\r\n  text-align: center;\r\n  width: 14rem;\r\n  &:hover {\r\n    color: var(--text-high-emphasis);\r\n    transform: scale(1.05);\r\n    background-color: var(--primary-color);\r\n  }\r\n  &:active {\r\n    transform: scale(0.9);\r\n  }\r\n`;\r\n\r\nconst Card = ({ id, name, email }) => {\r\n  return (\r\n    <Container>\r\n      <img src={`https://robohash.org/${id}?size=200x200`} alt='' />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email.toLowerCase()}</p>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <>\r\n      {\r\n        robots.map((user, i) => {\r\n          return (\r\n            <Card\r\n              key={i}\r\n              id={robots[i].id}\r\n              name={robots[i].name}\r\n              email={robots[i].email}\r\n            />\r\n          );\r\n        })\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardList; ","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SearchByName = styled.input`\r\n    outline: none;\r\n    border: 0;\r\n    padding: 1rem;\r\n    background-color: var(--overlay-color);\r\n    font-size: 1.1rem;\r\n    color: white;\r\n    border-radius: 0.5rem;\r\n    width: 30vw;\r\n    @media only screen and (max-width: 600px) {\r\n         width: 90vw;\r\n    }\r\n\r\n    /* make search box placeholder text white */\r\n    ::placeholder {\r\n      color: var(--text-medium-emphasis); /* chrome, firefox, opera, safari */\r\n      opacity: 1; /* firefox */\r\n    }\r\n\r\n    :-ms-input-placeholder {\r\n      color: var(--text-medium-emphasis); /* internet explorer */\r\n    }\r\n\r\n    ::-ms-input-placeholder {\r\n      color: var(--text-medium-emphasis);  /* microsoft edge */\r\n    }\r\n\r\n    /* disable search box cancel button */\r\n    ::-webkit-search-cancel-button {\r\n      display: none;\r\n    }\r\n  `;\r\n\r\nconst SearchBox = ({ searchField, searchChange }) => {\r\n  return (\r\n    <SearchByName\r\n      type='search'\r\n      placeholder='Search by name'\r\n      onChange={searchChange}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  :root {\r\n    --background-color: rgba(20, 20, 20);\r\n    --surface-color: rgba(50, 50, 50);\r\n    --overlay-color: rgba(80, 80, 80);\r\n    --primary-color: #BB86FC;\r\n    --secondary-color: #03DAC5;\r\n    --text-high-emphasis: rgba(255, 255, 255, 0.87);\r\n    --text-medium-emphasis: rgba(255, 255, 255, 0.60);\r\n  }\r\n\r\n  @import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\r\n  body {\r\n      margin: 0;\r\n      font-family: 'Roboto', sans-serif;\r\n      background-color: var(--background-color);\r\n      color: var(--text-medium-emphasis);\r\n  }\r\n\r\n  /* hide scrollbar */\r\n  *::-webkit-scrollbar {\r\n    display: none;  /* chrome, safari and opera */\r\n  }\r\n\r\n  * {\r\n    -ms-overflow-style: none;  /* ie and edge */\r\n    scrollbar-width: none;  /* firefox */\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;","import React, { useState, useEffect } from 'react';\r\nimport CardList from './components/CardList';\r\nimport SearchBox from './components/SearchBox';\r\n//import 'tachyons';\r\nimport styled from 'styled-components';\r\nimport GlobalStyle from './globalStyle';\r\n\r\nconst Header = styled.div`\r\n    margin: 1rem 0 0.5rem 0;\r\n    background-color: var(--surface-color);\r\n    padding: 1rem;\r\n    text-align: center;\r\n    `;\r\n\r\nconst Heading = styled.h1`\r\n    margin: 0;\r\n    font-size: 6vw;\r\n    margin-bottom: 0.5rem;\r\n    color: var(--primary-color);\r\n    @media only screen and (max-width: 600px) {\r\n        font-size: 15vw;\r\n    }\r\n  `;\r\n\r\nconst CardContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n  `;\r\n\r\nconst App = () => {\r\n  const [robots, setRobots] = useState([]);\r\n  const [searchField, setSearchField] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(users => { setRobots(users) });\r\n  });\r\n\r\n  const onSearchChange = (event) => {\r\n    setSearchField(event.target.value); // update searchField\r\n    //window.scrollTo(0, 0);            // scroll to the top of the page\r\n  }\r\n\r\n  const filteredRobots = robots.filter(robot => {\r\n    return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Header>\r\n        <Heading>RoboFriends</Heading>\r\n        <SearchBox searchChange={onSearchChange} />\r\n      </Header>\r\n      <CardContainer>\r\n        <CardList robots={filteredRobots} />\r\n      </CardContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}